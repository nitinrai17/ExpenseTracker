{"ast":null,"code":"//import axios from 'axios';\nimport { API_BASE_URL, ACCESS_TOKEN } from '../constants'; //const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || '/api/1.0'; \n\nconst request = options => {\n  const headers = new Headers({\n    'Content-Type': 'application/json'\n  });\n\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  const defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n\n    return json;\n  }));\n};\n\nexport const fetchCategoryData = async () => {\n  try {\n    return await fetch('categories', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n  } catch (error) {}\n};\nexport function getAllCategories() {\n  return request({\n    url: API_BASE_URL + '/categories',\n    method: 'GET'\n  });\n}\nexport function createCategory(category) {\n  return request({\n    url: API_BASE_URL + '/category',\n    method: 'POST',\n    body: JSON.stringify(category)\n  });\n}\nexport function removeCategory(id) {\n  return request({\n    url: API_BASE_URL + `/category/${id}`,\n    method: 'DELETE'\n  });\n}\nexport function getAllExpenses() {\n  return request({\n    url: API_BASE_URL + '/expenses',\n    method: 'GET'\n  });\n}\nexport function createExpense(expense) {\n  return request({\n    url: API_BASE_URL + '/expense',\n    method: 'POST',\n    body: JSON.stringify(expense)\n  });\n}\nexport function removeExpense(id) {\n  return request({\n    url: API_BASE_URL + `/expense/${id}`,\n    method: 'DELETE'\n  });\n}\nexport const saveCategoryData = async category => {\n  try {\n    //await axios.post(`${API_BASE_URL}/category`,category).then(function (response) {\n    //   console.log(response);\n    //   return response;\n    // });\n    console.log(category);\n    return await fetch(`/api/1.0/category`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(category)\n    }).then(function (response) {\n      console.log(response);\n      return response;\n    });\n  } catch (error) {}\n};\nexport const deleteCategoryData = async id => {\n  try {\n    //return await axios.delete(`${API_BASE_URL}/category/${id}`);\n    return await fetch(`/api/1.0/category/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n  } catch (error) {}\n};","map":{"version":3,"sources":["D:/Nitin/Projects/ExpenseTracker/expensetrackerui/src/api/UtilsData.js"],"names":["API_BASE_URL","ACCESS_TOKEN","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","fetchCategoryData","method","error","getAllCategories","createCategory","category","body","JSON","stringify","removeCategory","id","getAllExpenses","createExpense","expense","removeExpense","saveCategoryData","console","log","deleteCategoryData"],"mappings":"AAAA;AACA,SAASA,YAAT,EAAsBC,YAAtB,QAA0C,cAA1C,C,CAEA;;AAEA,MAAMC,OAAO,GAAIC,OAAD,IAAa;AACzB,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACxB,oBAAgB;AADQ,GAAZ,CAAhB;;AAIA,MAAGC,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAAH,EAAuC;AACnCG,IAAAA,OAAO,CAACI,MAAR,CAAe,eAAf,EAAgC,YAAYF,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAA5C;AACH;;AAED,QAAMQ,QAAQ,GAAG;AAACL,IAAAA,OAAO,EAAEA;AAAV,GAAjB;AACAD,EAAAA,OAAO,GAAGO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,QAAlB,EAA4BN,OAA5B,CAAV;AAEA,SAAOS,KAAK,CAACT,OAAO,CAACU,GAAT,EAAcV,OAAd,CAAL,CACNW,IADM,CACDC,QAAQ,IACVA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBE,IAAI,IAAI;AACzB,QAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;AACb,aAAOC,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP;AACH;;AACD,WAAOA,IAAP;AACH,GALD,CAFG,CAAP;AASH,CArBD;;AAwBA,OAAO,MAAMI,iBAAiB,GAAG,YAAY;AAE5C,MAAG;AAEF,WAAO,MAAMR,KAAK,CAAC,YAAD,EAAe;AACvBS,MAAAA,MAAM,EAAE,KADe;AAEvBjB,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAFc,KAAf,CAAlB;AAQA,GAVD,CAUC,OAAMkB,KAAN,EAAY,CAEZ;AACD,CAfM;AAiBP,OAAO,SAASC,gBAAT,GAA4B;AAE/B,SAAOrB,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAEb,YAAY,GAAG,aADT;AAEXqB,IAAAA,MAAM,EAAE;AAFG,GAAD,CAAd;AAIH;AAED,OAAO,SAASG,cAAT,CAAwBC,QAAxB,EAAkC;AAErC,SAAOvB,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAEb,YAAY,GAAG,WADT;AAEXqB,IAAAA,MAAM,EAAE,MAFG;AAGXK,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,QAAf;AAHK,GAAD,CAAd;AAKH;AAED,OAAO,SAASI,cAAT,CAAwBC,EAAxB,EAA4B;AAE/B,SAAO5B,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAEb,YAAY,GAAI,aAAY8B,EAAG,EADzB;AAEXT,IAAAA,MAAM,EAAE;AAFG,GAAD,CAAd;AAIH;AAGD,OAAO,SAASU,cAAT,GAA0B;AAE7B,SAAO7B,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAEb,YAAY,GAAG,WADT;AAEXqB,IAAAA,MAAM,EAAE;AAFG,GAAD,CAAd;AAIH;AAED,OAAO,SAASW,aAAT,CAAuBC,OAAvB,EAAgC;AAEnC,SAAO/B,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAEb,YAAY,GAAG,UADT;AAEXqB,IAAAA,MAAM,EAAE,MAFG;AAGXK,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeK,OAAf;AAHK,GAAD,CAAd;AAKH;AAED,OAAO,SAASC,aAAT,CAAuBJ,EAAvB,EAA2B;AAE9B,SAAO5B,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAEb,YAAY,GAAI,YAAW8B,EAAG,EADxB;AAEXT,IAAAA,MAAM,EAAE;AAFG,GAAD,CAAd;AAIH;AAGD,OAAO,MAAMc,gBAAgB,GAAG,MAAOV,QAAP,IAAoB;AAEnD,MAAG;AACD;AACM;AACA;AACN;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACA,WAAO,MAAMb,KAAK,CAAE,mBAAF,EAAqB;AAC9BS,MAAAA,MAAM,EAAE,MADsB;AAE9BjB,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFqB;AAM9BsB,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeH,QAAf;AANuB,KAArB,CAAL,CAOLX,IAPK,CAOA,UAAUC,QAAV,EAAoB;AAC9BqB,MAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;AACA,aAAOA,QAAP;AACD,KAVW,CAAb;AAYD,GAlBD,CAkBC,OAAMO,KAAN,EAAY,CAEZ;AACD,CAvBM;AAyBP,OAAO,MAAMgB,kBAAkB,GAAG,MAAOR,EAAP,IAAc;AAE/C,MAAG;AACF;AACA,WAAO,MAAMlB,KAAK,CAAE,qBAAoBkB,EAAG,EAAzB,EAA4B;AACpCT,MAAAA,MAAM,EAAE,QAD4B;AAEpCjB,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAF2B,KAA5B,CAAlB;AAOA,GATD,CASC,OAAMkB,KAAN,EAAY,CAEZ;AACD,CAdM","sourcesContent":["//import axios from 'axios';\r\nimport { API_BASE_URL,ACCESS_TOKEN } from '../constants';\r\n\r\n//const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || '/api/1.0'; \r\n\r\nconst request = (options) => {\r\n    const headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n    })\r\n    \r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n    .then(response => \r\n        response.json().then(json => {\r\n            if(!response.ok) {\r\n                return Promise.reject(json);\r\n            }\r\n            return json;\r\n        })\r\n    );\r\n};\r\n\r\n\r\nexport const fetchCategoryData = async () => {\r\n\t\t\r\n\ttry{\r\n\t\t\r\n\t\treturn await fetch('categories', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n\t}catch(error){\r\n\t\t\r\n\t}\r\n};\r\n\r\nexport function getAllCategories() {\r\n    \r\n    return request({\r\n        url: API_BASE_URL + '/categories',\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function createCategory(category) {\r\n    \r\n    return request({\r\n        url: API_BASE_URL + '/category',\r\n        method: 'POST',\r\n        body: JSON.stringify(category)         \r\n    });\r\n}\r\n\r\nexport function removeCategory(id) {\r\n    \r\n    return request({\r\n        url: API_BASE_URL + `/category/${id}`,\r\n        method: 'DELETE'\r\n    });\r\n}\r\n\r\n\r\nexport function getAllExpenses() {\r\n    \r\n    return request({\r\n        url: API_BASE_URL + '/expenses',\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function createExpense(expense) {\r\n    \r\n    return request({\r\n        url: API_BASE_URL + '/expense',\r\n        method: 'POST',\r\n        body: JSON.stringify(expense)         \r\n    });\r\n}\r\n\r\nexport function removeExpense(id) {\r\n    \r\n    return request({\r\n        url: API_BASE_URL + `/expense/${id}`,\r\n        method: 'DELETE'\r\n    });\r\n}\r\n\r\n\r\nexport const saveCategoryData = async (category) => {\r\n\t\t\r\n\ttry{\r\n\t\t //await axios.post(`${API_BASE_URL}/category`,category).then(function (response) {\r\n         //   console.log(response);\r\n         //   return response;\r\n\t\t // });\r\n\t\t console.log(category);\r\n\t\t return await fetch(`/api/1.0/category`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body : JSON.stringify(category)\r\n        }).then(function (response) {\r\n\t\t\t   console.log(response);\r\n\t\t\t   return response;\r\n\t\t\t });\r\n          \r\n\t}catch(error){\r\n\t\t\r\n\t}\r\n};\r\n\r\nexport const deleteCategoryData = async (id) => {\r\n\t\t\r\n\ttry{\r\n\t\t//return await axios.delete(`${API_BASE_URL}/category/${id}`);\r\n\t\treturn await fetch(`/api/1.0/category/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\t}catch(error){\r\n\t\t\r\n\t}\r\n};"]},"metadata":{},"sourceType":"module"}