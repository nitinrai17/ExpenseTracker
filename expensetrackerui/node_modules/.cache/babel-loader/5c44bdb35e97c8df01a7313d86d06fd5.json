{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nitin\\\\Projects\\\\ExpenseTracker\\\\expensetrackerui\\\\src\\\\Category.js\";\nimport React, { Component } from 'react';\nimport AppNav from './AppNav';\n\nclass Category extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      Categories: []\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/1.0/categories');\n    const body = await response.json();\n    this.setState({\n      Categories: body,\n      isLoading: false\n    });\n  }\n\n  render() {\n    const {\n      Categories,\n      isLoading\n    } = this.state;\n    if (isLoading) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, \"Loading ..... \");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, \"Categories\"), Categories.map(category => /*#__PURE__*/React.createElement(\"div\", {\n      id: category.categoryId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }, category.categoryName)));\n  }\n\n}\n\nexport default Category;","map":{"version":3,"sources":["D:/Nitin/Projects/ExpenseTracker/expensetrackerui/src/Category.js"],"names":["React","Component","AppNav","Category","state","isLoading","Categories","componentDidMount","response","fetch","body","json","setState","render","map","category","categoryId","categoryName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAGA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AACJC,MAAAA,SAAS,EAAE,IADP;AAEJC,MAAAA,UAAU,EAAG;AAFT,KADqB;AAAA;;AAM5B,QAAMC,iBAAN,GAAyB;AACrB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAACN,MAAAA,UAAU,EAAGI,IAAd;AAAoBL,MAAAA,SAAS,EAAG;AAAhC,KAAd;AAEH;;AAEFQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEP,MAAAA,UAAF;AAAcD,MAAAA;AAAd,QAA4B,KAAKD,KAAvC;AACA,QAAGC,SAAH,EACI,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAR;AAEJ,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAIQC,UAAU,CAACQ,GAAX,CAAeC,QAAQ,iBACf;AAAK,MAAA,EAAE,EAAEA,QAAQ,CAACC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMD,QAAQ,CAACE,YADf,CADR,CAJR,CAFJ;AAeH;;AAjC4B;;AAoCjC,eAAed,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport AppNav from './AppNav';\r\n\r\n\r\nclass Category extends Component {\r\n    state = { \r\n        isLoading: true,\r\n        Categories : []\r\n     }\r\n\r\n     async componentDidMount(){\r\n         const response = await fetch('/api/1.0/categories');\r\n         const body = await response.json();\r\n         this.setState({Categories : body, isLoading : false});\r\n\r\n     }\r\n\r\n    render() { \r\n        const { Categories, isLoading } = this.state;\r\n        if(isLoading)\r\n            return (<div>Loading ..... </div>);\r\n\r\n        return (  \r\n            \r\n            <div>\r\n             <AppNav/>\r\n                <h2>Categories</h2>\r\n                {\r\n                    Categories.map(category =>\r\n                            <div id={category.categoryId}>\r\n                                { category.categoryName}    \r\n                            </div>\r\n                    )\r\n\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}